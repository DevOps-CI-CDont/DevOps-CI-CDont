name: Continuous Integration

on:
  push:
  pull_request:
    branches: [ "main" ]

jobs:
  python_tests:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f itu-minitwit/backend/test/pytests/requirements.txt ]; then pip install -r itu-minitwit/backend/test/pytests/requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
      - name: Build and run Go api
        run: |
          (cd itu-minitwit/backend/Main && go build)
          (cd itu-minitwit/backend/Main && ./Main &)
      - name: Test with pytest
        run: |
          pytest


  go_tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2

      - name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.20.x

      - name: Build and run Go api
        run: |
          (cd itu-minitwit/backend/ && go mod tidy)
          (cd itu-minitwit/backend/ && go build -v ./...)
          (cd itu-minitwit/backend/Main && go build)
          (cd itu-minitwit/backend/Main && ./Main &)
      - name: Test
        run: |
          (cd itu-minitwit/backend/test/gotests && go test -v ./...)
